[project]
requires-python = ">=3.7"

[tool.poetry]
name = "pytoolkit"
version = "0.1.2"
description = ""
authors = ["wangqs <wqs1639@gmail.com>"]

repository = "https://github.com/qsoyq/pytoolkit"

[tool.poetry.build]
generate-setup-file = true

[tool.poetry.scripts]
snowflake = "pytoolkit.scripts.snowflake:main"
urandom = "pytoolkit.scripts.urandom:main"
ghi = "pytoolkit.scripts.ghi.main:main"
helloserver = "pytoolkit.scripts.helloserver:main"

# laiye
lc-chatbot = "pytoolkit.scripts.laiye.lc_chatbot:main"
laiye-web-message-route-tsingtao = "pytoolkit.scripts.laiye.laiye_web_message_route_tsingtao:main"
# openapi
openapi_download = "pytoolkit.scripts.openapi.downloader:main"
openapi_aggerator = "pytoolkit.scripts.openapi.aggregator:main"

# obsidian
obsidian_image_download = "pytoolkit.scripts.obsidian.image_download:main"
obsidian_assets_download = "pytoolkit.scripts.obsidian.assets_download:main"


[tool.poetry.dependencies]
python = ">=3.7 <4.0"
typer = ">=0.5"
toml = ">=0.10.2"
rich = [
    { version = "<=12.0.1", python = "<=3.6.2, >=3.6"},
    { version = ">=12.6", python = ">=3.6.3"}
]
typing-extensions = ">=4.1"
fastapi = ">=0.83"
uvicorn = ">=0.16"
httpx = {version = ">=0.22", extras = ["socks"]}

[tool.poetry.dev-dependencies]
pre-commit = ">=2.1"
pycln = [
    { version = ">=2.4.0", python = ">=3.7"},
    { version = "<2.4.0", python = "<3.7"},
]
yapf = ">=0.32.0"

isort = ">=5.8"
mypy = ">=0.971"
ipython = [
    { version = ">=8.4", python = ">=3.8" },
    { version = ">=7.16", python = ">=3.6, <3.8" },
]

tox = ">=3.25.1"
tox-poetry = ">=0.4.1"
pytest = ">=7.0"
pytest-asyncio = ">=0.16.0"
types-toml = ">=0.10.8"
pretty-errors = ">=1.2.25"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.9"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310, py39, py38, py37
isolated_build = true

[testenv]
setenv =
    PYTHONPATH = .

deps =
    poetry
    pytest

commands =

    python -m poetry install
    python -m pip install pytest
    python -m pytest tests

[testenv:py3.6.2]
setenv =
    PYTHONPATH = .

deps =
    poetry
    pytest

allowlist_externals = py3.6.2
commands =
    py3.6.2 -m pip install --upgrade pip
    py3.6.2 -m pip install pytest pytest-asyncio>=0.16.0
    py3.6.2 -m pip install -r requirements.txt
    py3.6.2 -m pytest tests
"""

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = false
exclude = ['^venv/', '^__init__\.py$']

[[tool.mypy.overrides]]
module = [
    "pretty_errors",
    "uvicorn",
]
ignore_missing_imports = true


[tool.pytest.ini_options]
minversion = "7.0"
testpaths = [
    "tests",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 119
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
# docstring-code-line-length = "dynamic"
